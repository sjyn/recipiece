#!/usr/bin/env python3

import argparse
import os
import subprocess
import shutil

parser = argparse.ArgumentParser(
    prog="luarocker",
    description="A simple package manager for luarocks",
)

parser.add_argument("-r", "--reinstall", help="ignore lock file and reinstall all packages", action='store_true')
parser.add_argument("-f", "--file", help="location of modules file")

args = parser.parse_args()

lock_file_path = "luarocker.lock"
modules_directory = "modules"

if args.reinstall:
    if os.path.exists(lock_file_path):
        os.remove(lock_file_path)
    else:
        print("No lockfile present")
    
    if os.path.exists(modules_directory):
        shutil.rmtree(modules_directory)
    else:
        print("No modules directory present")


package_file_path = args.file
if not package_file_path:
    package_file_path = "modules.txt"


with open(lock_file_path, "r+") as lockfile:
    with open(package_file_path, "r") as package_file:
        locked_packages = lockfile.readlines()
        locked_packages = [lp.strip() for lp in locked_packages]
        locked_packages = [lp for lp in locked_packages if len(lp) > 0]
        print(locked_packages)

        packages_from_modules = package_file.readlines()
        packages_from_modules = [pm.strip() for pm in packages_from_modules]
        packages_from_modules = [pm for pm in packages_from_modules if len(pm) > 0]

        packages_to_install = list(set(packages_from_modules) - set(locked_packages))
        print("Installing the following packages")
        for p in packages_to_install:
            print(f"  {p}")

        if len(packages_to_install) > 0:
            subprocess.run(["luarocks", "install", "--tree", modules_directory] + packages_to_install)
        else:
            print("No packages to install")

        for package in packages_to_install:
            lockfile.write(package)
            lockfile.write("\n")
